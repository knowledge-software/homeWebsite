#!/usr/bin/perl -w -I/sw/lib/perl5 -I/sw/lib/perl5/darwinuse strict;# 10th table  -- Summary#our $tableIndex = 10;#our $baseURL = "http://www.erh.noaa.gov/ifps/MapClick.php?site=OKX&llon=-74.009583&rlon=-73.549583&tlat=41.222917&blat=40.765417&smap=1&mp=0&map.x=142&map.y=111";# 7th table    -- 7 day forcast#our $tableIndex = 7;#our $baseURL = "http://www.erh.noaa.gov/ifps/MapClick.php?site=OKX&llon=-74.009583&rlon=-73.549583&tlat=41.222917&blat=40.765417&smap=1&mp=0&map.x=142&map.y=111";# 6th table   -- 7 day forcast on city pageour $tableIndex = 7;#our $baseURL = "http://www.erh.noaa.gov/forecast/MapClick.php?CityName=White+Plains&state=NY&site=OKX";#our $baseURL = "http://forecast.weather.gov/MapClick.php?CityName=White+Plains&state=NY&site=OKX";#our $baseURL = "http://forecast.weather.gov/MapClick.php?CityName=White+Plains&state=NY&site=OKX&textField1=41.0209&textField2=-73.7574&e=0"our $baseURL = "http://forecast.weather.gov/MapClick.php?CityName=White+Plains&state=NY&site=OKX&textField1=41.0209&textField2=-73.7574&e=0";## define the subclasspackage myTableFinder;	use base "HTML::Parser";	my ($tableCount) = 0;	my ($tableOutput) = 0;	my ($tableNesting) = 0;	sub start {	my ($self, $tag, $attr, $attrseq, $origtext) = @_;	# print out original text	if ($tag =~ /^table$/i) {		$tableCount++;		$tableNesting++;		}		# what we need to do is to make sure we finish the nth table regardless if there is another table nested within it.  We can	# do this by remembering the nesting count and not stopping the printing until the nesting count returns to its old state.	# Be sure to maintain the table count.	if ($tableCount == $tableIndex) {		$tableOutput = $tableNesting;		}			# print out all tags while in table.	if ($tableOutput) {		if ($tag =~ /^img$/i) {			# print "\n>>>>","http://www.srh.noaa.gov", $attr->{'src'},  "<<<<\n";			#			print "<a href=\"",$baseURL,"\" target=\"_top\">";#			print "<img src=\"http://www.srh.noaa.gov", $attr->{'src'}, "\" width=\"",$attr->{'width'}, "\" height=\"",$attr->{'height'},"\">\n";			#			print  $attr->{'src'};#			print  $attr->{'width'};#			print  $attr->{'height'};			print "<img src=\"http://forecast.weather.gov", $attr->{'src'}, "\">\n";#			print "<img src=\"http://forecast.weather.gov", $attr->{'src'}, "\" width=\"",$attr->{'width'}, "\" height=\"",$attr->{'height'},"\">\n";			print "</a>";		} else {			print $origtext;			}		}	}sub text {	my ($self, $text) = @_;	# just print out the original text		print "<font size=-2>",$text,"</font>" if ($tableOutput);	}sub end {	my ($self, $tag, $origtext) = @_;	# print out original text	if ($tableOutput) {		print $origtext;		$tableNesting--	if ($tag =~ /^table$/i);		$tableOutput = 0 if $tableNesting == $tableOutput;		}}1;  #ends class declarationmy ($DEBUG)	= 0;########	Program Path# if ( !open( URLPATH, "curl -fs \"$baseURL\" |") ) {	die "Can't open $baseURL\n";	}my ($p) = new myTableFinder;print "Content-type: text/html\r\n\r\n";print "<html><body>\n\n" if $DEBUG;print "<center>";		#	print "<a href=\"$baseURL\" target=\"_blank\">w";$p->parse_file( *URLPATH );		#	print "</a>";print "</center>";print "\n\n</body></html>\n" if $DEBUG;